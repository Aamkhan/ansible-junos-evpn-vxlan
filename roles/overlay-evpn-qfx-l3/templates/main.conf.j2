
routing-options {
    router-id {{ host.loopback.ip }};
    forwarding-table {
        ecmp-fast-reroute;
    }
}

{% set vrf_id = 1 %}
routing-instances {
{% for vrf in overlay.vrfs %}
    VRF_{{ vrf.name }} {
        instance-type vrf;
        interface lo0.{{ vrf_id }};
{% for bd in vrf.bridge_domains %}
{% if bd.network is defined %}
        interface irb.{{ bd.vlan_id }};
{% endif %}
{% endfor %}
        route-distinguisher {{ host.loopback.ip }}:100{{vrf_id}};
        vrf-target target:10:1;
    }
{% set vrf_id = vrf_id + 1 %}
{% endfor %}
}


interfaces {
{% set vrf_id = 1 %}
{% for vrf in overlay.vrfs %}
    lo0 {
        unit {{ vrf_id }} {
            family inet {
                address {{ overlay.vrf_lo0[vrf.name] }}/32;
            }
        }
    }
{% set vrf_id = vrf_id + 1 %}
{% endfor %}
    irb {
{% for vrf in overlay.vrfs %}
{% for bd in vrf.bridge_domains %}
{% if bd.network is defined %}
        unit {{ bd.vlan_id }} {
            family inet {
                address {{ bd.network }}{{ overlay.local_ip }}/{{ bd.mask }} {
                    virtual-gateway-address {{ bd.network }}{{ overlay.vip_ip }};
                }
            }
        }
{% endif %}
{% endfor %}
{% endfor %}
    }
}

protocols {
    bgp {
        group overlay {
            type internal;
{% if overlay.local.cluster is defined %}
			cluster {{ overlay.local.cluster }}
{% endif %}
            family evpn {
                signaling;
            }
            local-address {{ host.loopback.ip }};
            local-as {{ overlay.local.asn }};
            multipath;
{% for neighbor in overlay.neighbors %}
            neighbor {{ neighbor }};
{% endfor %}
        }
    }
    evpn {
        encapsulation vxlan;
        extended-vni-list [ {% for vrf in overlay.vrfs %}{% for bd in vrf.bridge_domains %} {{ bd.vni_id }} {% endfor %}{% endfor %} ];
        multicast-mode ingress-replication;
        vni-options {
{% for vrf in overlay.vrfs %}
{% for bd in vrf.bridge_domains %}
            vni {{ bd.vni_id }} {
                vrf-target export target:1:{{ bd.vni_id }};
            }
{% endfor %}
{% endfor %}
        }
    }
}

switch-options {
    vtep-source-interface lo0.0;
    vrf-import LEAF-IN;
    vrf-target target:9999:9999;
    route-distinguisher {{ host.loopback.ip }}:1;
}

policy-options {
     policy-statement LEAF-IN {
{% for vrf in overlay.vrfs %}
{% for bd in vrf.bridge_domains %}
        term a{{ bd.vni_id }} {
            from community com{{ bd.vni_id }};
            then accept;
        }
{% endfor %}
{% endfor %}
   	    term switch_options {
            from community switch_options_comm;
            then accept;
        }
        term zzz {
            then reject;
        }
    }
    community switch_options_comm members target:9999:9999;
{% for vrf in overlay.vrfs %}
{% for bd in vrf.bridge_domains %}
    community com{{ bd.vni_id }} members target:1:{{ bd.vni_id }};
{% endfor %}
{% endfor %}
}


vlans {
{% for vrf in overlay.vrfs %}
{% for bd in vrf.bridge_domains %}
    bd{{ bd.vni_id }} {
        vlan-id {{ bd.vlan_id }};
        l3-interface irb.{{ bd.vlan_id }};
        vxlan {
            vni {{ bd.vni_id }};
            ingress-node-replication;
        }
    }
{% endfor %}
{% endfor %}
}
